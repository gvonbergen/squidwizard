---

- name: Pridikt Proxy Server Installation
  hosts: squidproxies

  vars:
    install_dir: "{{ ansible_env.HOME }}"
    squid_dir: "{{ install_dir }}/src/squid"
    squidwizard_dir: "{{ install_dir }}/src/squidwizard"

  tasks:
    - name: Activate building repositories in apt/sources.list
      replace:
        path: /etc/apt/sources.list
        regexp: "# deb-src"
        replace: "deb-src"

    - name: Install essential build tools
      apt:
        update_cache: yes
        pkg:
          - git
          - build-essential
          - libssl-dev
          - apache2-utils
          - devscripts

    - name: Install build dependencies for Squid3
      apt:
        pkg:
          - squid3
        state: build-dep

    - name: Create directories
      file:
        path: "{{ item }}"
        state: directory
      with_items:
        - "{{ squid_dir }}"
        - "{{ squidwizard_dir }}"

    - name: Install Squid3 source code
      command: apt-get source squid3
      args:
        chdir: "{{ squid_dir }}"
      when: ansible_facts["distribution"] == "Ubuntu"

    - name: Download Squid3 patch file
      get_url:
        url: https://raw.githubusercontent.com/gvonbergen/squidwizard/master/addons/squid_http_violations_patch_3.5.27.patch
        dest: "{{ squid_dir }}/squid_http_violations_patch_3.5.27.patch"

    - name: Patch Squid3 Debian rules file
      patch:
        remote_src: yes
        src: "{{ squid_dir }}/squid_http_violations_patch_3.5.27.patch"
        dest: "{{ squid_dir }}/squid3-3.5.27/debian/rules"

    - name: Check if build files already exist
      stat:
        path: "{{ squid_dir }}/squid3_3.5.27-1ubuntu1.4_amd64.build"
      register: squid3_build

    - name: Build Squid3 target
      command: debuild -us -uc -b
      args:
        chdir: "{{ squid_dir }}/squid3-3.5.27"
      environment:
        DEB_CXXFLAGS_APPEND: -DMAXTCPLISTENPORTS=2048
      when: squid3_build.stat.exists == false

    - name: Install Squid3 packages
      apt:
        deb: "{{ squid_dir }}/{{ item }}"
      with_items:
        - squid3_3.5.27-1ubuntu1.4_all.deb
        - squid_3.5.27-1ubuntu1.4_amd64.deb
        - squid-cgi_3.5.27-1ubuntu1.4_amd64.deb
        - squidclient_3.5.27-1ubuntu1.4_amd64.deb
        - squid-common_3.5.27-1ubuntu1.4_all.deb
        - squid-dbg_3.5.27-1ubuntu1.4_amd64.deb
        - squid-purge_3.5.27-1ubuntu1.4_amd64.deb
      when: squid3_build.stat.exists == false

    - name: Download SquidWizard
      git:
        repo: https://github.com/gvonbergen/squidwizard.git
        dest: "{{ squidwizard_dir }}"

    - name: Run SquidWizard
      command: >
        python3 squidwizard.py
        --network {{ NETWORK }}
        --interface {{ INTERFACE }}
        --source {{ SOURCE }}
        --local-net "ipv4={{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}/24
        gateway4={{ hostvars[inventory_hostname]['ansible_default_ipv4']['gateway'] }}
        ipv6={{ hostvars[inventory_hostname]['ansible_default_ipv6']['address'] }}/{{ hostvars[inventory_hostname]['ansible_default_ipv6']['prefix'] }}
        gateway6={{ hostvars[inventory_hostname]['ansible_default_ipv6']['gateway'] }}"
      args:
        chdir: "{{ squidwizard_dir }}"

    - name: Remove networkd file
      file:
        path: /etc/systemd/network/05-eth0.network
        state: absent

    - name: Copy netplan file
      copy:
        remote_src: yes
        src: "{{ squidwizard_dir }}/config/01-netcfg.yaml"
        dest: /etc/netplan
      notify:
        - apply netplan

    - name: Copy squid file
      copy:
        remote_src: yes
        src: "{{ squidwizard_dir }}/config/squid.conf"
        dest: /etc/squid
      notify:
        - restart squid

  handlers:
    - name: restart squid
      systemd:
        state: restarted
        name: squid

    - name: apply netplan
      command: netplan apply
